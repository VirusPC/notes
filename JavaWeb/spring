一、Spring入门
1.Spring概念
    ·spring是开源的轻量级框架
    ·spring核心主要两部分：
        ·aop（aspect-oriented programming）：面向切面编程，扩展功能不是修改源代码实现
        ·ioc(inversion of control)：控制反转。
         比如有一个类，在类里面有方法（不是静态的方法），调用类里面的方法，创建类的对象，使用对
         象调用方法，创建类对象的过程
         对象的创建不是通过new方式实现，而是交给spring配置创建类对象
    ·spring是一站式框架
        ·spring在javaee三层结构中，每一层都提供不同的解决技术
            ·web层：springMVC
            ·service层：spring的ioc
            ·dao层：spring的jdbc Template
    ·spring版本
            ·hibernate 5.x
            ·spring 4.x

2.Spring的ioc操作
    ·把对象的创建交给spring进行管理
    ·ioc操作两部分
            ·ioc的配置文件方式
            ·ioc的注解方式

3.IOC底层原理
    ·ioc底层原理使用技术
        ·xml配置文件
        ·dom4j解决xml
        ·工厂设计模式
        ·反射
    ·代码示例
        ·原始代码：
         public class User{
            public void add(){
                ...
            }
         }
         //调用类里面的方法
         User user = new User();
         user.add();
         缺陷：耦合度太高
        ·使用工厂模式解耦合操作
         public class UserService{
            public void add(){
                ...
            }
         }
         //解决方案，创建工厂类
         public class Factory{
            //提供返回UserService对象的方法
            public static UserService getService(){
                return new UserService();
            }
         }
         public class UserServlet{
            UserService s = Factory.getService();
            s.add();
         }
    ·配置bean
        ·第一步，创建xml配置文件，配置要创建对象类
         <bean id="userServuce" class="cn.itcast.UserService"/>
        ·第二步，创建工厂类，使用dom4j解析配置文件+反射


二、spring的入门
1.ioc底层原理
2.ioc入门案例
3.解决配置文件没有提示

三、spring的bean管理
1.bean实例化三种方式
2.bean标签常用属性
3.属性注入方式介绍
4.spring注入属性（有参构造和set方法）
5.spring注入对象类型属性（重点）
6.名称空间注入
7.spring注入复杂数据

四、ioc和di区别
